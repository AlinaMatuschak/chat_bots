{"version":3,"sources":["contexts/SocketProvider.js","contexts/ContactsProvider.js","components/ContactDetail/ContactDetail.jsx","components/ChatMessageList/ChatMessageList.jsx","components/ChatForm/ChatForm.jsx","components/Chat/Chat.jsx","helpers/isIncludeSubstring.js","helpers/getFirstSymbols.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/SidebarControlers/SidebarControlers.jsx","components/Sidebar/Sidebar.jsx","components/ToggleSidebar/ToggleSidebar.jsx","components/Messager/Messager.jsx","helpers/randomNameGenerator.js","hooks/useLocalStorage.js","App.jsx","index.jsx"],"names":["SocketContext","React","createContext","useSocket","useContext","SocketProvider","user","children","useState","socket","setSocket","useEffect","newSocket","io","query","close","events","useMemo","EVENT_CONECT","EVENT_GET_CONTACTS","EVENT_GET_MESSAGES","EVENT_SEND_MESSAGE","EVENT_GET_MESSAGE","EVENT_DISCONNECT","value","Provider","ContactsContext","useContacts","ContactsProvider","contacts","setContacts","selectedContact","setSelectedContact","on","socketContacts","off","selectContact","ContactDetail","memo","className","src","img","alt","name","description","ChatMessageList","messages","lastMessage","createRef","scrollToBottom","getContactMessages","useCallback","filter","userMessage","recipient","id","sender","current","scrollIntoView","behavior","map","chatMessage","i","allMessages","ref","length","classNames","date","text","ChatForm","message","setMessage","changeMessage","target","handelSubmit","event","preventDefault","trim","emit","onSubmit","type","placeholder","onChange","Chat","setMessages","messagesFromServer","newMessage","currentMessages","isIncludeSubstring","string","subString","toLowerCase","includes","getFirstSymbols","firstSymbols","slice","join","Contact","contact","isOnline","ContactList","hideSidebar","isActiveContact","onClick","aria-hidden","SidebarControlers","visibleValue","handleClick","Sidebar","setVisibleValue","searchValue","setSearchValue","showContacts","handleChange","ToggleSidebar","isVisibleSideble","Messager","setIsVisibleSideble","currentValue","capFirst","charAt","toUpperCase","getRandomInt","min","max","Math","floor","random","randomNameGenerator","names","App","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","uuidv4","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdaea1d9.chunk.js","sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport io from 'socket.io-client';\n\nconst SocketContext = React.createContext();\n\nexport function useSocket() {\n  return useContext(SocketContext);\n}\n\nexport function SocketProvider({ user, children }) {\n  const [socket, setSocket] = useState();\n\n  useEffect(() => {\n    const newSocket = io(\n      'https://chat-bots-server.herokuapp.com/',\n      { query: user },\n    );\n\n    setSocket(newSocket);\n\n    return () => newSocket.close();\n  }, [user]);\n\n  const events = useMemo(() => ({\n    EVENT_CONECT: 'connection',\n    EVENT_GET_CONTACTS: 'contacts',\n    EVENT_GET_MESSAGES: 'get-messages',\n    EVENT_SEND_MESSAGE: 'send-message',\n    EVENT_GET_MESSAGE: 'receive-message',\n    EVENT_DISCONNECT: 'disconnect',\n  }), []);\n\n  const value = useMemo(() => ({\n    socket,\n    events,\n  }), [socket, events]);\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n}\n","import React, {\n  useState,\n  useEffect,\n  useContext,\n  useMemo,\n} from 'react';\nimport { useSocket } from './SocketProvider';\n\nconst ContactsContext = React.createContext();\n\nexport function useContacts() {\n  return useContext(ContactsContext);\n}\n\nexport function ContactsProvider({ children }) {\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const { socket, events: { EVENT_GET_CONTACTS } } = useSocket();\n\n  useEffect(() => {\n    if (!socket) {\n      return;\n    }\n\n    socket.on(EVENT_GET_CONTACTS, (socketContacts) => {\n      setContacts(socketContacts);\n    });\n\n    return () => socket.off(EVENT_GET_CONTACTS);\n  }, [socket, setContacts]);\n\n  const value = useMemo(() => ({\n    contacts,\n    selectContact: setSelectedContact,\n    selectedContact,\n  }), [contacts, setSelectedContact, selectedContact]);\n\n  return (\n    <ContactsContext.Provider value={value}>\n      {children}\n    </ContactsContext.Provider>\n  );\n}\n","import React, { memo } from 'react';\nimport { useContacts } from '../../contexts/ContactsProvider';\nimport './ContactDetail.scss';\n\nexport const ContactDetail = memo(() => {\n  const { selectedContact } = useContacts();\n\n  return (\n    <div className=\"detail\">\n      <img\n        src={selectedContact.img}\n        alt=\"contact img\"\n        className=\"detail__img\"\n      />\n      <div className=\"detail__inf\">\n        <h2 className=\"detail__name\">{selectedContact.name}</h2>\n        {selectedContact.description && (\n          <p className=\"detail__description\">\n            {selectedContact.description}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n});\n","import React, { createRef, memo, useCallback, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { useContacts } from '../../contexts/ContactsProvider';\nimport './ChatMessageList.scss';\n\nexport const ChatMessageList = memo(({ user, messages }) => {\n  const { selectedContact } = useContacts();\n  const lastMessage = createRef();\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [lastMessage]);\n\n  const getContactMessages = useCallback(() => messages\n    .filter(userMessage => userMessage.recipient === selectedContact.id\n      || userMessage.sender === selectedContact.id),\n  [messages, selectedContact]);\n\n  const scrollToBottom = useCallback(() => {\n    if (!lastMessage.current) {\n      return;\n    }\n\n    lastMessage.current.scrollIntoView({ behavior: 'smooth' });\n  }, [lastMessage]);\n\n  return (\n    <>\n      {getContactMessages().map((chatMessage, i, allMessages) => (\n        <div\n          ref={allMessages.length - 1 === i ? lastMessage : null}\n          // eslint-disable-next-line react/no-array-index-key\n          key={i}\n          className={classNames('chat__message', 'message', {\n            'message--from-me': chatMessage.sender === user.id,\n          })}\n        >\n          <div className=\"message__head\">\n            <p className=\"message__sender\">\n              {chatMessage.sender === selectedContact.id\n                ? selectedContact.name\n                : user.name\n              }\n            </p>\n            <span className=\"message__date\">{chatMessage.date}</span>\n          </div>\n          <div className=\"message__text-wrp\">\n            <span className=\"message__text\">{chatMessage.text}</span>\n            <span\n              className={classNames('message__poiter', {\n                'message__poiter--right': chatMessage.sender === user.id,\n              })}\n            />\n          </div>\n        </div>\n      ))}\n    </>\n  );\n});\n","import React, { memo, useCallback, useState } from 'react';\nimport { useContacts } from '../../contexts/ContactsProvider';\nimport { useSocket } from '../../contexts/SocketProvider';\nimport './ChatForm.scss';\n\nexport const ChatForm = memo(() => {\n  const [message, setMessage] = useState('');\n  const { socket, events: { EVENT_SEND_MESSAGE } } = useSocket();\n  const { selectedContact } = useContacts();\n\n  const changeMessage = useCallback(({ target }) => {\n    setMessage(target.value);\n  }, [setMessage]);\n\n  const handelSubmit = useCallback((event) => {\n    event.preventDefault();\n\n    if (!message.trim().length) {\n      return;\n    }\n\n    socket.emit(EVENT_SEND_MESSAGE, {\n      text: message,\n      recipient: selectedContact,\n    });\n\n    setMessage('');\n  }, [setMessage, message, selectedContact, EVENT_SEND_MESSAGE]);\n\n  return (\n\n    <form\n      className=\"form\"\n      onSubmit={handelSubmit}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Start chatting!\"\n        className=\"form__input\"\n        value={message}\n        onChange={changeMessage}\n      />\n      <button\n        type=\"submit\"\n        className=\"form__button\"\n      />\n    </form>\n  );\n});\n","import React, { memo, useEffect, useState } from 'react';\nimport { useContacts } from '../../contexts/ContactsProvider';\nimport { useSocket } from '../../contexts/SocketProvider';\nimport { ContactDetail } from '../ContactDetail';\nimport './Chat.scss';\nimport { ChatMessageList } from '../ChatMessageList/ChatMessageList';\nimport { ChatForm } from '../ChatForm/ChatForm';\n\nexport const Chat = memo(({ user }) => {\n  const [messages, setMessages] = useState([]);\n  const { socket, events: {\n    EVENT_GET_MESSAGES,\n    EVENT_GET_MESSAGE,\n  } } = useSocket();\n  const { selectedContact } = useContacts();\n\n  useEffect(() => {\n    socket.emit(EVENT_GET_MESSAGES, selectedContact);\n  }, [selectedContact, EVENT_GET_MESSAGES]);\n\n  useEffect(() => {\n    if (socket == null) {\n      return;\n    }\n\n    socket.on(EVENT_GET_MESSAGES, (messagesFromServer) => {\n      setMessages(messagesFromServer);\n    });\n\n    socket.on(EVENT_GET_MESSAGE, (newMessage) => {\n      setMessages(currentMessages => [...currentMessages, newMessage]);\n    });\n\n    return () => socket.off(EVENT_GET_MESSAGES, EVENT_GET_MESSAGE);\n  }, [socket, EVENT_GET_MESSAGES, EVENT_GET_MESSAGE]);\n\n  return (\n    <div className=\"chat\">\n      <div className=\"chat__detail\">\n        <ContactDetail />\n      </div>\n\n      <div className=\"chat__messages\">\n        <ChatMessageList user={user} messages={messages} />\n      </div>\n\n      <div className=\"chat__form\">\n        <ChatForm />\n      </div>\n    </div>\n  );\n});\n","export const isIncludeSubstring = (\n  string,\n  subString,\n) => string.toLowerCase().includes(subString.toLowerCase());\n","export const getFirstSymbols = (string) => {\n  const firstSymbols = [...string]\n    .slice(0, 37)\n    .join('');\n\n  return `${firstSymbols}...`;\n};\n","import React, { memo } from 'react';\nimport { getFirstSymbols } from '../../helpers/getFirstSymbols';\nimport './Contact.scss';\n\nexport const Contact = memo(({ contact }) => {\n  const { name, img, description, isOnline } = contact;\n\n  return (\n    <div className=\"contact\">\n      <div className=\"contact__img-wrp\">\n        <img\n          src={img}\n          alt=\"user icon\"\n          className=\"contact__img\"\n        />\n        {isOnline && <span className=\"contact__online\" />}\n      </div>\n\n      <div className=\"contact__inf\">\n        <p className=\"contact__name\">{name}</p>\n        {description && (\n          <span className=\"contact__description\">\n            {getFirstSymbols(description)}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport { useContacts } from '../../contexts/ContactsProvider';\nimport { Contact } from '../Contact/Contact';\nimport './ContactList.scss';\n\nexport const ContactList = memo(({ contacts, hideSidebar }) => {\n  const {\n    selectContact,\n    selectedContact,\n  } = useContacts();\n\n  const isActiveContact = useCallback(\n    id => selectedContact && selectedContact.id === id,\n    [selectedContact],\n  );\n\n  return (\n    <ul className=\"contact-list\">\n      {contacts.map(contact => (\n        <li\n          key={contact.id}\n          className={classNames('contact-list__item', {\n            'contact-list__item--active': isActiveContact(contact.id),\n          })}\n          onClick={() => {\n            selectContact(contact);\n            hideSidebar();\n          }}\n          aria-hidden=\"true\"\n        >\n          <Contact contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n});\n","import React, { memo, useCallback } from 'react';\nimport classNames from 'classnames';\nimport './SidebarControlers.scss';\n\nexport const SidebarControlers = memo(({ visibleValue, onClick }) => {\n  const handleClick = useCallback(({ target }) => {\n    onClick(target.value);\n  }, [onClick]);\n\n  return (\n    <div className=\"sidebar-controlers\">\n      <button\n        type=\"button\"\n        value=\"online\"\n        className={classNames('sidebar-controlers__button', {\n          'sidebar-controlers__button--active': visibleValue === 'online',\n        })}\n        onClick={handleClick}\n      >\n        Online\n      </button>\n      <button\n        type=\"button\"\n        value=\"all\"\n        className={classNames('sidebar-controlers__button', {\n          'sidebar-controlers__button--active': visibleValue === 'all',\n        })}\n        onClick={handleClick}\n      >\n        All\n      </button>\n    </div>\n  );\n});\n","import React, { useState, useMemo, useCallback, memo } from 'react';\nimport { useContacts } from '../../contexts/ContactsProvider';\nimport { isIncludeSubstring } from '../../helpers/isIncludeSubstring';\nimport { ContactList } from '../ContactList';\nimport { SidebarControlers } from '../SidebarControlers/SidebarControlers';\nimport './Sidebar.scss';\n\nexport const Sidebar = memo(({ hideSidebar }) => {\n  const [visibleValue, setVisibleValue] = useState('online');\n  const [searchValue, setSearchValue] = useState('');\n  const { contacts } = useContacts();\n  const showContacts = useMemo(() => {\n    if (visibleValue === 'all') {\n      return contacts\n        .filter(({ name }) => isIncludeSubstring(name, searchValue));\n    }\n\n    return contacts.filter(({ name, isOnline }) => isOnline\n      && isIncludeSubstring(name, searchValue));\n  }, [visibleValue, contacts, isIncludeSubstring, searchValue]);\n\n  const handleChange = useCallback(({ target }) => {\n    setSearchValue(target.value);\n  }, [setSearchValue]);\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__controlers\">\n        <SidebarControlers\n          visibleValue={visibleValue}\n          onClick={setVisibleValue}\n        />\n      </div>\n\n      <div className=\"sidebar__chats\">\n        <ContactList\n          contacts={showContacts}\n          hideSidebar={hideSidebar}\n        />\n      </div>\n\n      <input\n        type=\"text\"\n        className=\"sidebar__search\"\n        placeholder=\"Search...\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n});\n","import React, { memo } from 'react';\nimport './ToggleSidebar.scss';\n\nexport const ToggleSidebar = memo(({ isVisibleSideble, handleClick }) => (\n  <button\n    className=\"toggle-sidebar\"\n    type=\"button\"\n    onClick={handleClick}\n  >\n    {!isVisibleSideble && (\n      <img\n        src=\"https://img.icons8.com/color/48/4a90e2/menu--v5.png\"\n        alt=\"menu icon\"\n        className=\"toggle-sidebar__img\"\n      />\n    )\n    }\n  </button>\n));\n","import React, { memo, useCallback, useState } from 'react';\nimport classNames from 'classnames';\nimport { useContacts } from '../../contexts/ContactsProvider';\nimport { Chat } from '../Chat/Chat';\nimport { Sidebar } from '../Sidebar';\nimport { ToggleSidebar } from '../ToggleSidebar/ToggleSidebar';\nimport './Messager.scss';\n\nexport const Messager = memo(({ user }) => {\n  const { selectedContact } = useContacts();\n  const [isVisibleSideble, setIsVisibleSideble] = useState(true);\n\n  const handleClick = useCallback(() => {\n    setIsVisibleSideble(currentValue => !currentValue);\n  }, [setIsVisibleSideble]);\n\n  return (\n    <div className=\"messager\">\n      {selectedContact && (\n        <div className=\"messager__toggle-sidebar\">\n          <ToggleSidebar\n            isVisibleSideble={isVisibleSideble}\n            handleClick={handleClick}\n          />\n        </div>\n      )}\n\n      <div className=\"messager__chat-wrp\">\n        {selectedContact\n          && <Chat user={user} />}\n      </div>\n\n      <div\n        className={classNames('messager__sidebar-wrp', {\n          'messager__sidebar-wrp--visible': isVisibleSideble,\n        })}\n      >\n        <Sidebar hideSidebar={handleClick} />\n      </div>\n    </div>\n  );\n});\n","function capFirst(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function randomNameGenerator() {\n  // eslint-disable-next-line max-len\n  const names = ['abandoned', 'able', 'absolute', 'adorable', 'adventurous', 'academic', 'acceptable', 'acclaimed', 'accomplished', 'accurate', 'aching', 'acidic', 'acrobatic', 'active', 'actual', 'adept', 'admirable', 'admired', 'adolescent', 'adorable', 'adored', 'advanced', 'afraid', 'affectionate', 'aged', 'aggravating', 'aggressive', 'agile', 'agitated', 'agonizing', 'agreeable', 'ajar', 'alarmed', 'alarming', 'alert', 'alienated', 'alive', 'all', 'altruistic', 'amazing', 'ambitious', 'ample', 'amused', 'amusing', 'anchored', 'ancient', 'angelic', 'angry', 'anguished', 'animated', 'annual', 'another', 'antique', 'anxious', 'any', 'apprehensive', 'appropriate', 'apt', 'arctic', 'arid', 'aromatic', 'artistic', 'ashamed', 'assured', 'astonishing', 'athletic', 'attached', 'attentive', 'attractive', 'austere', 'authentic', 'authorized', 'automatic', 'avaricious', 'average', 'aware', 'awesome', 'awful', 'awkward', 'babyish', 'bad', 'back', 'baggy', 'bare', 'barren', 'basic', 'beautiful', 'belated', 'beloved', 'beneficial', 'better', 'best', 'bewitched', 'big', 'big-hearted', 'biodegradable', 'bite-sized', 'bitter', 'black', 'black-and-white', 'bland', 'blank', 'blaring', 'bleak', 'blind', 'blissful', 'blond', 'blue', 'blushing', 'bogus', 'boiling', 'bold', 'bony', 'boring', 'bossy', 'both', 'bouncy', 'bountiful', 'bowed', 'brave', 'breakable', 'brief', 'bright', 'brilliant', 'brisk', 'broken', 'bronze', 'brown', 'bruised', 'bubbly', 'bulky', 'bumpy', 'buoyant', 'burdensome', 'burly', 'bustling', 'busy', 'buttery', 'buzzing', 'calculating', 'calm', 'candid', 'canine', 'capital', 'carefree', 'careful', 'careless', 'caring', 'cautious', 'cavernous', 'celebrated', 'charming', 'cheap', 'cheerful', 'cheery', 'chief', 'chilly', 'chubby', 'circular', 'classic', 'clean', 'clear', 'clear-cut', 'clever', 'close', 'closed', 'cloudy', 'clueless', 'clumsy', 'cluttered', 'coarse', 'cold', 'colorful', 'colorless', 'colossal', 'comfortable', 'common', 'compassionate', 'competent', 'complete', 'complex', 'complicated', 'composed', 'concerned', 'concrete', 'confused', 'conscious', 'considerate', 'constant', 'content', 'conventional', 'cooked', 'cool', 'cooperative', 'coordinated', 'corny', 'corrupt', 'costly', 'courageous', 'courteous', 'crafty', 'crazy', 'creamy', 'creative', 'creepy', 'criminal', 'crisp', 'critical', 'crooked', 'crowded', 'cruel', 'crushing', 'cuddly', 'cultivated', 'cultured', 'cumbersome', 'curly', 'curvy', 'cute', 'cylindrical', 'damaged', 'damp', 'dangerous', 'dapper', 'daring', 'darling', 'dark', 'dazzling', 'dead', 'deadly', 'deafening', 'dear', 'dearest', 'decent', 'decimal', 'decisive', 'deep', 'defenseless', 'defensive', 'defiant', 'deficient', 'definite', 'definitive', 'delayed', 'delectable', 'delicious', 'delightful', 'delirious', 'demanding', 'dense', 'dental', 'dependable', 'dependent', 'descriptive', 'deserted', 'detailed', 'determined', 'devoted', 'different', 'difficult', 'digital', 'diligent', 'dim', 'dimpled', 'dimwitted', 'direct', 'disastrous', 'discrete', 'disfigured', 'disgusting', 'disloyal', 'dismal', 'distant', 'downright', 'dreary', 'dirty', 'disguised', 'dishonest', 'dismal', 'distant', 'distinct', 'distorted', 'dizzy', 'dopey', 'doting', 'double', 'downright', 'drab', 'drafty', 'dramatic', 'dreary', 'droopy', 'dry', 'dual', 'dull', 'dutiful', 'each', 'eager', 'earnest', 'early', 'easy', 'easy-going', 'ecstatic', 'edible', 'educated', 'elaborate', 'elastic', 'elated', 'elderly', 'electric', 'elegant', 'elementary', 'elliptical', 'embarrassed', 'embellished', 'eminent', 'emotional', 'empty', 'enchanted', 'enchanting', 'energetic', 'enlightened', 'enormous', 'enraged', 'entire', 'envious', 'equal', 'equatorial', 'essential', 'esteemed', 'ethical', 'euphoric', 'even', 'evergreen', 'everlasting', 'every', 'evil', 'exalted', 'excellent', 'exemplary', 'exhausted', 'excitable', 'excited', 'exciting', 'exotic', 'expensive', 'experienced', 'expert', 'extraneous', 'extroverted', 'extra-large', 'extra-small', 'fabulous', 'failing', 'faint', 'fair', 'faithful', 'fake', 'false', 'familiar', 'famous', 'fancy', 'fantastic', 'far', 'faraway', 'far-flung', 'far-off', 'fast', 'fat', 'fatal', 'fatherly', 'favorable', 'favorite', 'fearful', 'fearless', 'feisty', 'feline', 'female', 'feminine', 'few', 'fickle', 'filthy', 'fine', 'finished', 'firm', 'first', 'firsthand', 'fitting', 'fixed', 'flaky', 'flamboyant', 'flashy', 'flat', 'flawed', 'flawless', 'flickering', 'flimsy', 'flippant', 'flowery', 'fluffy', 'fluid', 'flustered', 'focused', 'fond', 'foolhardy', 'foolish', 'forceful', 'forked', 'formal', 'forsaken', 'forthright', 'fortunate', 'fragrant', 'frail', 'frank', 'frayed', 'free', 'French', 'fresh', 'frequent', 'friendly', 'frightened', 'frightening', 'frigid', 'frilly', 'frizzy', 'frivolous', 'front', 'frosty', 'frozen', 'frugal', 'fruitful', 'full', 'fumbling', 'functional', 'funny', 'fussy', 'fuzzy', 'gargantuan', 'gaseous', 'general', 'generous', 'gentle', 'genuine', 'giant', 'giddy', 'gigantic', 'gifted', 'giving', 'glamorous', 'glaring', 'glass', 'gleaming', 'gleeful', 'glistening', 'glittering', 'gloomy', 'glorious', 'glossy', 'glum', 'golden', 'good', 'good-natured', 'gorgeous', 'graceful', 'gracious', 'grand', 'grandiose', 'granular', 'grateful', 'grave', 'gray', 'great', 'greedy', 'green', 'gregarious', 'grim', 'grimy', 'gripping', 'grizzled', 'gross', 'grotesque', 'grouchy', 'grounded', 'growing', 'growling', 'grown', 'grubby', 'gruesome', 'grumpy', 'guilty', 'gullible', 'gummy', 'hairy', 'half', 'handmade', 'handsome', 'handy', 'happy', 'happy-go-lucky', 'hard', 'hard-to-find', 'harmful', 'harmless', 'harmonious', 'harsh', 'hasty', 'hateful', 'haunting', 'healthy', 'heartfelt', 'hearty', 'heavenly', 'heavy', 'hefty', 'helpful', 'helpless', 'hidden', 'hideous', 'high', 'high-level', 'hilarious', 'hoarse', 'hollow', 'homely', 'honest', 'honorable', 'honored', 'hopeful', 'horrible', 'hospitable', 'hot', 'huge', 'humble', 'humiliating', 'humming', 'humongous', 'hungry', 'hurtful', 'husky', 'icky', 'icy', 'ideal', 'idealistic', 'identical', 'idle', 'idiotic', 'idolized', 'ignorant', 'ill', 'illegal', 'ill-fated', 'ill-informed', 'illiterate', 'illustrious', 'imaginary', 'imaginative', 'immaculate', 'immaterial', 'immediate', 'immense', 'impassioned', 'impeccable', 'impartial', 'imperfect', 'imperturbable', 'impish', 'impolite', 'important', 'impossible', 'impractical', 'impressionable', 'impressive', 'improbable', 'impure', 'inborn', 'incomparable', 'incompatible', 'incomplete', 'inconsequential', 'incredible', 'indelible', 'inexperienced', 'indolent', 'infamous', 'infantile', 'infatuated', 'inferior', 'infinite', 'informal', 'innocent', 'insecure', 'insidious', 'insignificant', 'insistent', 'instructive', 'insubstantial', 'intelligent', 'intent', 'intentional', 'interesting', 'internal', 'international', 'intrepid', 'ironclad', 'irresponsible', 'irritating', 'itchy', 'jaded', 'jagged', 'jam-packed', 'jaunty', 'jealous', 'jittery', 'joint', 'jolly', 'jovial', 'joyful', 'joyous', 'jubilant', 'judicious', 'juicy', 'jumbo', 'junior', 'jumpy', 'juvenile', 'kaleidoscopic', 'keen', 'key', 'kind', 'kindhearted', 'kindly', 'klutzy', 'knobby', 'knotty', 'knowledgeable', 'knowing', 'known', 'kooky', 'kosher', 'lame', 'lanky', 'large', 'last', 'lasting', 'late', 'lavish', 'lawful', 'lazy', 'leading', 'lean', 'leafy', 'left', 'legal', 'legitimate', 'light', 'lighthearted', 'likable', 'likely', 'limited', 'limp', 'limping', 'linear', 'lined', 'liquid', 'little', 'live', 'lively', 'livid', 'loathsome', 'lone', 'lonely', 'long', 'long-term', 'loose', 'lopsided', 'lost', 'loud', 'lovable', 'lovely', 'loving', 'low', 'loyal', 'lucky', 'lumbering', 'luminous', 'lumpy', 'lustrous', 'luxurious', 'mad', 'made-up', 'magnificent', 'majestic', 'major', 'male', 'mammoth', 'married', 'marvelous', 'masculine', 'massive', 'mature', 'meager', 'mealy', 'mean', 'measly', 'meaty', 'medical', 'mediocre', 'medium', 'meek', 'mellow', 'melodic', 'memorable', 'menacing', 'merry', 'messy', 'metallic', 'mild', 'milky', 'mindless', 'miniature', 'minor', 'minty', 'miserable', 'miserly', 'misguided', 'misty', 'mixed', 'modern', 'modest', 'moist', 'monstrous', 'monthly', 'monumental', 'moral', 'mortified', 'motherly', 'motionless', 'mountainous', 'muddy', 'muffled', 'multicolored', 'mundane', 'murky', 'mushy', 'musty', 'muted', 'mysterious', 'naive', 'narrow', 'nasty', 'natural', 'naughty', 'nautical', 'near', 'neat', 'necessary', 'needy', 'negative', 'neglected', 'negligible', 'neighboring', 'nervous', 'new', 'next', 'nice', 'nifty', 'nimble', 'nippy', 'nocturnal', 'noisy', 'nonstop', 'normal', 'notable', 'noted', 'noteworthy', 'novel', 'noxious', 'numb', 'nutritious', 'nutty', 'obedient', 'obese', 'oblong', 'oily', 'oblong', 'obvious', 'occasional', 'odd', 'oddball', 'offbeat', 'offensive', 'official', 'old', 'old-fashioned', 'only', 'open', 'optimal', 'optimistic', 'opulent', 'orange', 'orderly', 'organic', 'ornate', 'ornery', 'ordinary', 'original', 'other', 'our', 'outlying', 'outgoing', 'outlandish', 'outrageous', 'outstanding', 'oval', 'overcooked', 'overdue', 'overjoyed', 'overlooked', 'palatable', 'pale', 'paltry', 'parallel', 'parched', 'partial', 'passionate', 'past', 'pastel', 'peaceful', 'peppery', 'perfect', 'perfumed', 'periodic', 'perky', 'personal', 'pertinent', 'pesky', 'pessimistic', 'petty', 'phony', 'physical', 'piercing', 'pink', 'pitiful', 'plain', 'plaintive', 'plastic', 'playful', 'pleasant', 'pleased', 'pleasing', 'plump', 'plush', 'polished', 'polite', 'political', 'pointed', 'pointless', 'poised', 'poor', 'popular', 'portly', 'posh', 'positive', 'possible', 'potable', 'powerful', 'powerless', 'practical', 'precious', 'present', 'prestigious', 'pretty', 'precious', 'previous', 'pricey', 'prickly', 'primary', 'prime', 'pristine', 'private', 'prize', 'probable', 'productive', 'profitable', 'profuse', 'proper', 'proud', 'prudent', 'punctual', 'pungent', 'puny', 'pure', 'purple', 'pushy', 'putrid', 'puzzled', 'puzzling', 'quaint', 'qualified', 'quarrelsome', 'quarterly', 'queasy', 'querulous', 'questionable', 'quick', 'quick-witted', 'quiet', 'quintessential', 'quirky', 'quixotic', 'quizzical', 'radiant', 'ragged', 'rapid', 'rare', 'rash', 'raw', 'recent', 'reckless', 'rectangular', 'ready', 'real', 'realistic', 'reasonable', 'red', 'reflecting', 'regal', 'regular', 'reliable', 'relieved', 'remarkable', 'remorseful', 'remote', 'repentant', 'required', 'respectful', 'responsible', 'repulsive', 'revolving', 'rewarding', 'rich', 'rigid', 'right', 'ringed', 'ripe', 'roasted', 'robust', 'rosy', 'rotating', 'rotten', 'rough', 'round', 'rowdy', 'royal', 'rubbery', 'rundown', 'ruddy', 'rude', 'runny', 'rural', 'rusty', 'sad', 'safe', 'salty', 'same', 'sandy', 'sane', 'sarcastic', 'sardonic', 'satisfied', 'scaly', 'scarce', 'scared', 'scary', 'scented', 'scholarly', 'scientific', 'scornful', 'scratchy', 'scrawny', 'second', 'secondary', 'second-hand', 'secret', 'self-assured', 'self-reliant', 'selfish', 'sentimental', 'separate', 'serene', 'serious', 'serpentine', 'several', 'severe', 'shabby', 'shadowy', 'shady', 'shallow', 'shameful', 'shameless', 'sharp', 'shimmering', 'shiny', 'shocked', 'shocking', 'shoddy', 'short', 'short-term', 'showy', 'shrill', 'shy', 'sick', 'silent', 'silky', 'silly', 'silver', 'similar', 'simple', 'simplistic', 'sinful', 'single', 'sizzling', 'skeletal', 'skinny', 'sleepy', 'slight', 'slim', 'slimy', 'slippery', 'slow', 'slushy', 'small', 'smart', 'smoggy', 'smooth', 'smug', 'snappy', 'snarling', 'sneaky', 'sniveling', 'snoopy', 'sociable', 'soft', 'soggy', 'solid', 'somber', 'some', 'spherical', 'sophisticated', 'sore', 'sorrowful', 'soulful', 'soupy', 'sour', 'Spanish', 'sparkling', 'sparse', 'specific', 'spectacular', 'speedy', 'spicy', 'spiffy', 'spirited', 'spiteful', 'splendid', 'spotless', 'spotted', 'spry', 'square', 'squeaky', 'squiggly', 'stable', 'staid', 'stained', 'stale', 'standard', 'starchy', 'stark', 'starry', 'steep', 'sticky', 'stiff', 'stimulating', 'stingy', 'stormy', 'straight', 'strange', 'steel', 'strict', 'strident', 'striking', 'striped', 'strong', 'studious', 'stunning', 'stupendous', 'stupid', 'sturdy', 'stylish', 'subdued', 'submissive', 'substantial', 'subtle', 'suburban', 'sudden', 'sugary', 'sunny', 'super', 'superb', 'superficial', 'superior', 'supportive', 'sure-footed', 'surprised', 'suspicious', 'svelte', 'sweaty', 'sweet', 'sweltering', 'swift', 'sympathetic', 'tall', 'talkative', 'tame', 'tan', 'tangible', 'tart', 'tasty', 'tattered', 'taut', 'tedious', 'teeming', 'tempting', 'tender', 'tense', 'tepid', 'terrible', 'terrific', 'testy', 'thankful', 'that', 'these', 'thick', 'thin', 'third', 'thirsty', 'this', 'thorough', 'thorny', 'those', 'thoughtful', 'threadbare', 'thrifty', 'thunderous', 'tidy', 'tight', 'timely', 'tinted', 'tiny', 'tired', 'torn', 'total', 'tough', 'traumatic', 'treasured', 'tremendous', 'tragic', 'trained', 'tremendous', 'triangular', 'tricky', 'trifling', 'trim', 'trivial', 'troubled', 'true', 'trusting', 'trustworthy', 'trusty', 'truthful', 'tubby', 'turbulent', 'twin', 'ugly', 'ultimate', 'unacceptable', 'unaware', 'uncomfortable', 'uncommon', 'unconscious', 'understated', 'unequaled', 'uneven', 'unfinished', 'unfit', 'unfolded', 'unfortunate', 'unhappy', 'unhealthy', 'uniform', 'unimportant', 'unique', 'united', 'unkempt', 'unknown', 'unlawful', 'unlined', 'unlucky', 'unnatural', 'unpleasant', 'unrealistic', 'unripe', 'unruly', 'unselfish', 'unsightly', 'unsteady', 'unsung', 'untidy', 'untimely', 'untried', 'untrue', 'unused', 'unusual', 'unwelcome', 'unwieldy', 'unwilling', 'unwitting', 'unwritten', 'upbeat', 'upright', 'upset', 'urban', 'usable', 'used', 'useful', 'useless', 'utilized', 'utter', 'vacant', 'vague', 'vain', 'valid', 'valuable', 'vapid', 'variable', 'vast', 'velvety', 'venerated', 'vengeful', 'verifiable', 'vibrant', 'vicious', 'victorious', 'vigilant', 'vigorous', 'villainous', 'violet', 'violent', 'virtual', 'virtuous', 'visible', 'vital', 'vivacious', 'vivid', 'voluminous', 'wan', 'warlike', 'warm', 'warmhearted', 'warped', 'wary', 'wasteful', 'watchful', 'waterlogged', 'watery', 'wavy', 'wealthy', 'weak', 'weary', 'webbed', 'wee', 'weekly', 'weepy', 'weighty', 'weird', 'welcome', 'well-documented', 'well-groomed', 'well-informed', 'well-lit', 'well-made', 'well-off', 'well-to-do', 'well-worn', 'wet', 'which', 'whimsical', 'whirlwind', 'whispered', 'white', 'whole', 'whopping', 'wicked', 'wide', 'wide-eyed', 'wiggly', 'wild', 'willing', 'wilted', 'winding', 'windy', 'winged', 'wiry', 'wise', 'witty', 'wobbly', 'woeful', 'wonderful', 'wooden', 'woozy', 'wordy', 'worldly', 'worn', 'worried', 'worrisome', 'worse', 'worst', 'worthless', 'worthwhile', 'worthy', 'wrathful', 'wretched', 'writhing', 'wrong', 'wry', 'yawning', 'yearly', 'yellow', 'yellowish', 'young', 'youthful', 'yummy', 'zany', 'zealous', 'zesty', 'zigzag', 'rocky'];\n\n  return `${capFirst(names[getRandomInt(0, names.length + 1)])}`\n  + ' '\n  + `${capFirst(names[getRandomInt(0, names.length + 1)])}`;\n}\n","import { useEffect, useState } from 'react';\n\nconst PREFIX = 'chats-';\n\nexport const useLocalStorage = (key, initialValue) => {\n  const prefixedKey = PREFIX + key;\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n\n    if (jsonValue !== null) {\n      return JSON.parse(jsonValue);\n    }\n\n    return initialValue;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [value, prefixedKey]);\n\n  return [value, setValue];\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport './App.scss';\n\nimport { Messager } from './components/Messager/Messager';\nimport { ContactsProvider } from './contexts/ContactsProvider';\nimport { SocketProvider } from './contexts/SocketProvider';\nimport { randomNameGenerator } from './helpers/randomNameGenerator';\nimport { useLocalStorage } from './hooks/useLocalStorage';\n\nexport const App = () => {\n  const [user] = useLocalStorage('user', {\n    id: uuidv4(),\n    name: randomNameGenerator(),\n    img: 'https://img.icons8.com/dusk/64/000000/change-user-male.png',\n  });\n\n  return (\n    <SocketProvider user={user}>\n      <ContactsProvider>\n        <div className=\"page\">\n          <div className=\"page__head\">\n            <h1 className=\"page__title\">Chat bots 2.0</h1>\n          </div>\n          <div className=\"page__body\">\n            <Messager user={user} />\n          </div>\n        </div>\n      </ContactsProvider>\n    </SocketProvider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport './utils/vars.scss';\nimport './reset.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}